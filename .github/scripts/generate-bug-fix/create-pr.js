#!/usr/bin/env node

const { execSync } = require('child_process');
const fs = require('fs');

const issueKey = process.env.ISSUE_KEY;
const bugSummary = process.env.BUG_SUMMARY;
const bugDescription = process.env.BUG_DESCRIPTION;
const fixCode = process.env.FIX_CODE;
const testCode = process.env.TEST_CODE;
const skipTests = process.env.SKIP_TESTS === 'true';
const affectedFiles = JSON.parse(process.env.AFFECTED_FILES || '[]');

function extractFixExplanation(fixCode) {
  const lines = fixCode.split('\n');
  const explanations = [];

  for (let i = 0; i < lines.length; i++) {
    const line = lines[i].trim();
    if (line.startsWith('//') && !line.includes('FILE_START') && !line.includes('FILE_END')) {
      const comment = line.replace('//', '').trim();
      if (comment.length > 20 && !explanations.includes(comment)) {
        explanations.push(comment);
      }
    }
  }

  return explanations.slice(0, 5);
}

function generatePRBody() {
  const fixExplanations = extractFixExplanation(fixCode);

  let body = `## Automated Bug Fix

This PR was automatically generated to fix **${issueKey}**.

### Bug Summary
${bugSummary}

### What Was Fixed
`;

  if (fixExplanations.length > 0) {
    fixExplanations.forEach(explanation => {
      body += `- ${explanation}\n`;
    });
  } else {
    body += `The fix addresses the issue described in ${issueKey}.\n`;
  }

  body += `
### Files Changed
`;

  affectedFiles.forEach(file => {
    const fileName = file.split('/').pop();
    body += `- \`${fileName}\`\n`;
  });

  body += `
### How It Was Fixed
The automated fix was generated by analyzing the bug description and the affected code. The fix includes:

1. **Code changes** to address the root cause
2. **Test coverage** to prevent regression

### Testing
- ${skipTests ? '‚è≠Ô∏è Tests skipped (build-only mode)' : '‚úÖ Tests passed'}
- ‚úÖ Build successful
- ‚úÖ SwiftLint checks completed

### Review Checklist
- [ ] Review the code changes for correctness
- [ ] Verify test coverage is adequate
- [ ] Test manually if needed (especially UI changes)
- [ ] Confirm the fix addresses the root cause
- [ ] Update Jira ticket status after merge

### Related
- **Jira:** ${issueKey}
- **Type:** Bug Fix
- **AI Generated:** Yes

---

ü§ñ Generated with [Claude Code](https://claude.com/claude-code)

Co-Authored-By: Claude <noreply@anthropic.com>`;

  return body;
}

function createPullRequest() {
  const title = `fix: ${issueKey} - ${bugSummary}`;
  const body = generatePRBody();

  const bodyFile = '/tmp/pr-body.md';
  fs.writeFileSync(bodyFile, body);

  try {
    execSync(
      `gh pr create --draft --title "${title}" --body-file "${bodyFile}"`,
      { encoding: 'utf-8', stdio: 'inherit' }
    );

    console.log('‚úì Pull request created successfully');
  } catch (error) {
    console.error('Error creating pull request:', error.message);
    process.exit(1);
  } finally {
    if (fs.existsSync(bodyFile)) {
      fs.unlinkSync(bodyFile);
    }
  }
}

createPullRequest();
