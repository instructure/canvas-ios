//
// This file is part of Canvas.
// Copyright (C) 2019-present  Instructure, Inc.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//

// DO NOT EDIT: this file was generated by build-colors.js

import Foundation
import SwiftUI

public enum InstColorName: String, CaseIterable {
    case ash, backgroundAlert, backgroundDanger, backgroundDark, backgroundDarkest,
        backgroundGrouped, backgroundGroupedCell, backgroundInfo, backgroundLight,
        backgroundLightest, backgroundMedium, backgroundSuccess, backgroundWarning, barney,
        borderAlert, borderDanger, borderDark, borderDarkest, borderInfo, borderLight,
        borderLightest, borderMedium, borderSuccess, borderWarning, crimson, electric, fire,
        licorice, oxford, porcelain, shamrock, textAlert, textDanger, textDark, textDarkest,
        textInfo, textLight, textLightest, textSuccess, textWarning, tiara, white
}

extension UIColor {
    /// Loads the named Canvas styleguide color from assets, accounting for contrast & dark mode
    public static func named(_ name: InstColorName, inHighContrast: Bool = UIAccessibility.isDarkerSystemColorsEnabled) -> UIColor {
        let named = inHighContrast ? "\(name.rawValue)HighContrast" : name.rawValue
        return UIColor(named: named, in: .core, compatibleWith: nil)!
    }

    @objc public static func named(_ name: String) -> UIColor? {
        guard let color = InstColorName(rawValue: name) else { return nil }
        return named(color)
    }
}

@available(iOS 13, *)
extension Color {
    /// Loads the named Canvas styleguide color from assets, accounting for contrast & dark mode
    public static func named(_ name: InstColorName) -> Color {
        return Color(name.rawValue, bundle: .core)
    }
}
