---
format_version: '13'
workflows:
  pr_adhoc_builds:
    after_run:
    - _common_save_spm_cache
    before_run:
    - _common_prepare_workspace
    - _pr_adhoc_build_discovery
    steps:
    - set-env-var@0:
        inputs:
        - destination_keys: INST_XCODE_SCHEME
        - value: Student
        title: Setup Student Scheme
    - bitrise-run@0:
        inputs:
        - bitrise_config_path: ./.bitrise/bitrise_pr_adhoc.yml
        - workflow_id: _pr_adhoc_build
        run_if: '{{enveq "REQUIRE_STUDENT" "true"}}'
        title: Build Student
    - set-env-var@0:
        inputs:
        - destination_keys: INST_XCODE_SCHEME
        - value: Teacher
        title: Setup Teacher Scheme
    - bitrise-run@0:
        inputs:
        - bitrise_config_path: ./.bitrise/bitrise_pr_adhoc.yml
        - workflow_id: _pr_adhoc_build
        run_if: '{{enveq "REQUIRE_TEACHER" "true"}}'
        title: Build Teacher
    - set-env-var@0:
        inputs:
        - destination_keys: INST_XCODE_SCHEME
        - value: Parent
        title: Setup Parent Scheme
    - bitrise-run@0:
        inputs:
        - bitrise_config_path: ./.bitrise/bitrise_pr_adhoc.yml
        - workflow_id: _pr_adhoc_build
        run_if: '{{enveq "REQUIRE_PARENT" "true"}}'
        title: Build Parent
    - set-env-var@0:
        inputs:
        - destination_keys: INST_XCODE_SCHEME
        - value: Horizon
        title: Setup Horizon Scheme
    - bitrise-run@0:
        inputs:
        - bitrise_config_path: ./.bitrise/bitrise_pr_adhoc.yml
        - workflow_id: _pr_adhoc_build
        run_if: '{{enveq "REQUIRE_HORIZON" "true"}}'
        title: Build Horizon
    - script@1:
        title: Create Comment HTML
        inputs:
        - content: |
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # make pipelines' return status equal the last command to exit with a non-zero status, or zero if all commands exit successfully
            set -o pipefail
            # debug log
            set -x

            declare -A APP_NAMES=(
                [BITRISE_PUBLIC_INSTALL_PAGE_QR_CODE_IMAGE_URL_Student]="Student"
                [BITRISE_PUBLIC_INSTALL_PAGE_QR_CODE_IMAGE_URL_Teacher]="Teacher"
                [BITRISE_PUBLIC_INSTALL_PAGE_QR_CODE_IMAGE_URL_Parent]="Parent"
                [BITRISE_PUBLIC_INSTALL_PAGE_QR_CODE_IMAGE_URL_Horizon]="Horizon"
            )

            COLUMNS=""

            for VAR_NAME in "${!APP_NAMES[@]}"; do
                if [[ -n "${!VAR_NAME}" ]]; then
                    COLUMNS+="<td><details>"
                    COLUMNS+="<summary>${APP_NAMES[$VAR_NAME]}</summary>"
                    COLUMNS+="<img src='${!VAR_NAME}' />"
                    COLUMNS+="</details></td>"
                fi
            done

            PR_COMMENT="<h1>Builds</h1>"
            PR_COMMENT+="<table>"
            PR_COMMENT+="<tr>${COLUMNS}</tr>"
            PR_COMMENT+="</table>"

            envman add --key PR_BUILDS_COMMENT --value $PR_COMMENT
    - comment-on-github-pull-request@0:
        inputs:
        - body: $PR_BUILDS_COMMENT
        - update_comment_tag: $INST_XCODE_SCHEME_Build
        - personal_access_token: $GITHUB_API_TOKEN
  _pr_adhoc_build:
    description: "This step expects the following environment variable: \n$INST_XCODE_SCHEME (e.g., Horizon)\n\nThe output will be an environment variable called BITRISE_PUBLIC_INSTALL_PAGE_QR_CODE_IMAGE_URL_$INST_XCODE_SCHEME that'll contain the image url of the QR code pointing to the created application."
    steps:
    - set-xcode-build-number@1:
        inputs:
        - plist_path: $INST_XCODE_SCHEME/$INST_XCODE_SCHEME/Resources/Info.plist
    - bitrise-step-stamp-appicon-with-version-number@1:
        inputs:
        - stamp_version: PR
        - stamp_build_number: $PR_NUMBER
        - stamp_path_to_icons: $INST_XCODE_SCHEME/$INST_XCODE_SCHEME/Resources/Assets.xcassets/AppIcon.appiconset
    - xcode-archive@5:
        inputs:
        - distribution_method: ad-hoc
        - automatic_code_signing: api-key
        - icloud_container_environment: Production
        - scheme: $INST_XCODE_SCHEME
    - deploy-to-bitrise-io@2:
        inputs:
        - notify_user_groups: none
    - create-install-page-qr-code@1: {}
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # make pipelines' return status equal the last command to exit with a non-zero status, or zero if all commands exit successfully
            set -o pipefail
            # debug log
            set -x

            QR_KEY="BITRISE_PUBLIC_INSTALL_PAGE_QR_CODE_IMAGE_URL_${INST_XCODE_SCHEME}"
            envman add --key $QR_KEY --value $BITRISE_PUBLIC_INSTALL_PAGE_QR_CODE_IMAGE_URL
        title: Export QR Image URL
    summary: This workflow stamps the app icon and creates a QR code installable ad-hoc build used for pull request testing.
  _pr_adhoc_build_discovery:
    steps:
    - script@1:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            # Assuming our commit message is in the correct format, we decide which tests to go on with
            # $GIT_CLONE_COMMIT_MESSAGE_BODY
            echo "Git msg: ${GIT_CLONE_COMMIT_MESSAGE_BODY}"
            echo "Bitrise Pull Request: "
            echo $BITRISE_PULL_REQUEST
            echo "Bitrise Git Message: "
            echo $BITRISE_GIT_MESSAGE

            if [[ ! -z $BITRISE_PULL_REQUEST ]]; then
              envman add --key PR_NUMBER --value $BITRISE_PULL_REQUEST
            else
              envman add --key PR_NUMBER --value "NOT_PR"
            fi
            if [[ $BITRISE_GIT_MESSAGE == *"Student"* ]]; then
              envman add --key REQUIRE_STUDENT --value "true"
            fi

            if [[ $BITRISE_GIT_MESSAGE == *"Teacher"* ]]; then
              envman add --key REQUIRE_TEACHER --value "true"
            fi

            if [[ $BITRISE_GIT_MESSAGE == *"Parent"* ]]; then
              envman add --key REQUIRE_PARENT --value "true"
            fi

            if [[ $BITRISE_GIT_MESSAGE == *"Horizon"* ]]; then
              envman add --key REQUIRE_HORIZON --value "true"
            fi

            if [[ $BITRISE_GIT_MESSAGE == *"affects: All"* ]]; then
              envman add --key REQUIRE_PARENT --value "true" &&
              envman add --key REQUIRE_TEACHER --value "true" &&
              envman add --key REQUIRE_STUDENT --value "true" &&
              envman add --key REQUIRE_HORIZON --value
            fi
        title: Discover Which Apps To Build
    summary: |-
      This step analyzes the pull request's description and decides which apps to build.

      Outputs if conditions are met for each app:
      - $REQUIRE_PARENT=true
      - $REQUIRE_TEACHER=true
      - $REQUIRE_STUDENT=true
      - $REQUIRE_HORIZON=true
trigger_map:
- pull_request_target_branch:
    regex: .*
  type: pull_request
  workflow: pr_adhoc_builds