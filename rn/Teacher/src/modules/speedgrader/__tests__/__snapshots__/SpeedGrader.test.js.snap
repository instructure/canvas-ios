// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SpeedGrader defaults current page to 0 if userID is not in submissions 1`] = `
<Screen
  navBarHidden={true}
  navBarStyle="modal"
  noRotationInVerticallyCompact={true}
  showDismissButton={true}
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      accessibilityLabel="In Progress"
      accessible={true}
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <ActivityIndicator
        animating={true}
        color="#999999"
        hidesWhenStopped={true}
        size="small"
      />
    </View>
    <Tutorial
      tutorials={
        Array [
          Object {
            "id": "swipe-tutorial",
            "image": Object {
              "testUri": "../../../src/images/speedgrader/Swipe.png",
            },
            "text": "Swipe left or right to view other student submissions",
          },
        ]
      }
    />
  </View>
</Screen>
`;

exports[`SpeedGrader defaults current page to 0 without studentIndex 1`] = `
<Screen
  navBarHidden={true}
  navBarStyle="modal"
  noRotationInVerticallyCompact={true}
  showDismissButton={true}
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      accessibilityLabel="In Progress"
      accessible={true}
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <ActivityIndicator
        animating={true}
        color="#999999"
        hidesWhenStopped={true}
        size="small"
      />
    </View>
    <Tutorial
      tutorials={
        Array [
          Object {
            "id": "swipe-tutorial",
            "image": Object {
              "testUri": "../../../src/images/speedgrader/Swipe.png",
            },
            "text": "Swipe left or right to view other student submissions",
          },
        ]
      }
    />
  </View>
</Screen>
`;

exports[`SpeedGrader only sets submissions once 1`] = `
<Screen
  navBarHidden={true}
  navBarStyle="modal"
  noRotationInVerticallyCompact={true}
  showDismissButton={true}
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <FlatList
      data={
        Array [
          Object {
            "key": "55",
            "submission": Object {
              "avatarURL": "http://www.fillmurray.com/100/100",
              "grade": "B-",
              "name": "Donald Trump",
              "sectionID": "1",
              "status": "submitted",
              "userID": "55",
            },
          },
          Object {
            "key": "55",
            "submission": Object {
              "avatarURL": "http://www.fillmurray.com/100/100",
              "grade": "B-",
              "name": "Donald Trump",
              "sectionID": "1",
              "status": "submitted",
              "userID": "55",
            },
          },
        ]
      }
      getItemLayout={[Function]}
      horizontal={true}
      initialNumToRender={null}
      keyboardShouldPersistTaps="handled"
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      pagingEnabled={true}
      renderItem={[Function]}
      showsHorizontalScrollIndicator={false}
      style={
        Object {
          "marginLeft": -10,
          "marginRight": -10,
        }
      }
      windowSize={5}
    />
    <Tutorial
      tutorials={
        Array [
          Object {
            "id": "swipe-tutorial",
            "image": Object {
              "testUri": "../../../src/images/speedgrader/Swipe.png",
            },
            "text": "Swipe left or right to view other student submissions",
          },
        ]
      }
    />
  </View>
</Screen>
`;

exports[`SpeedGrader renders 1`] = `
<Screen
  navBarHidden={true}
  navBarStyle="modal"
  noRotationInVerticallyCompact={true}
  showDismissButton={true}
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      accessibilityLabel="In Progress"
      accessible={true}
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <ActivityIndicator
        animating={true}
        color="#999999"
        hidesWhenStopped={true}
        size="small"
      />
    </View>
    <Tutorial
      tutorials={
        Array [
          Object {
            "id": "swipe-tutorial",
            "image": Object {
              "testUri": "../../../src/images/speedgrader/Swipe.png",
            },
            "text": "Swipe left or right to view other student submissions",
          },
        ]
      }
    />
  </View>
</Screen>
`;

exports[`SpeedGrader renders submissions if there are some 1`] = `
<A11yGroup
  style={
    Array [
      Object {
        "overflow": "hidden",
        "paddingLeft": 10,
        "paddingRight": 10,
      },
      Object {
        "height": 1334,
        "width": 770,
      },
    ]
  }
>
  <SubmissionGrader
    assignmentID="1"
    assignmentSubmissionTypes={
      Array [
        "none",
      ]
    }
    closeModal={[Function]}
    courseID="1"
    drawerInset={62}
    drawerState={
      DrawerState {
        "commentProgress": Object {},
        "currentSnap": 0,
        "deltaY": 0,
        "dragBegan": [Function],
        "drawerDidSnap": [Function],
        "drawers": Array [
          SpeedGrader {
            "_captureFlatList": [Function],
            "context": Object {},
            "dismiss": [Function],
            "getInitialTabIndex": [Function],
            "getItemLayout": [Function],
            "hasRenderedBody": true,
            "onLayout": [Function],
            "props": Object {
              "assignmentID": "1",
              "assignmentSubmissionTypes": Array [
                "none",
              ],
              "courseID": "1",
              "drawerPosition": 0,
              "getCourseEnabledFeatures": [MockFunction],
              "gradeSubmissionWithRubric": [MockFunction],
              "navigator": Object {
                "dismiss": [MockFunction],
                "dismissAllModals": [MockFunction],
                "isModal": false,
                "pop": [MockFunction],
                "replace": [MockFunction],
                "show": [MockFunction],
                "showWebView": [MockFunction],
                "traitCollection": [MockFunction],
              },
              "onDismiss": [Function],
              "pending": false,
              "refresh": [MockFunction],
              "refreshSubmissionSummary": [MockFunction],
              "refreshing": false,
              "resetDrawer": [MockFunction],
              "submissionEntities": Object {},
              "submissions": Array [
                Object {
                  "avatarURL": "http://www.fillmurray.com/100/100",
                  "grade": "B-",
                  "name": "Donald Trump",
                  "sectionID": "1",
                  "status": "submitted",
                  "userID": "55",
                },
              ],
              "userID": "1",
            },
            "refs": Object {},
            "renderBody": [Function],
            "renderItem": [Function],
            "scrollEnded": [Function],
            "setState": [Function],
            "snapTo": [Function],
            "state": Object {
              "currentPageIndex": 0,
              "currentStudentID": "1",
              "drawerInset": 62,
              "hasScrolledToInitialSubmission": false,
              "hasSetInitialDrawerPosition": false,
              "scrollEnabled": true,
              "size": Object {
                "height": 1334,
                "width": 770,
              },
              "submissions": Array [
                Object {
                  "avatarURL": "http://www.fillmurray.com/100/100",
                  "grade": "B-",
                  "name": "Donald Trump",
                  "sectionID": "1",
                  "status": "submitted",
                  "userID": "55",
                },
              ],
            },
            "updater": Updater {
              "_callbacks": Array [],
              "_renderer": ReactShallowRenderer {
                "_context": Object {},
                "_didScheduleRenderPhaseUpdate": false,
                "_dispatcher": Object {
                  "readContext": [Function],
                  "useCallback": [Function],
                  "useContext": [Function],
                  "useDebugValue": [Function],
                  "useDeferredValue": [Function],
                  "useEffect": [Function],
                  "useImperativeHandle": [Function],
                  "useLayoutEffect": [Function],
                  "useMemo": [Function],
                  "useReducer": [Function],
                  "useRef": [Function],
                  "useResponder": [Function],
                  "useState": [Function],
                  "useTransition": [Function],
                },
                "_element": <SpeedGrader
                  assignmentID="1"
                  assignmentSubmissionTypes={
                    Array [
                      "none",
                    ]
                  }
                  courseID="1"
                  drawerPosition={0}
                  getCourseEnabledFeatures={[MockFunction]}
                  gradeSubmissionWithRubric={[MockFunction]}
                  navigator={
                    Object {
                      "dismiss": [MockFunction],
                      "dismissAllModals": [MockFunction],
                      "isModal": false,
                      "pop": [MockFunction],
                      "replace": [MockFunction],
                      "show": [MockFunction],
                      "showWebView": [MockFunction],
                      "traitCollection": [MockFunction],
                    }
                  }
                  onDismiss={[Function]}
                  pending={false}
                  refresh={[MockFunction]}
                  refreshSubmissionSummary={[MockFunction]}
                  refreshing={false}
                  resetDrawer={[MockFunction]}
                  submissionEntities={Object {}}
                  submissions={
                    Array [
                      Object {
                        "avatarURL": "http://www.fillmurray.com/100/100",
                        "grade": "B-",
                        "name": "Donald Trump",
                        "sectionID": "1",
                        "status": "submitted",
                        "userID": "55",
                      },
                    ]
                  }
                  userID="1"
                />,
                "_firstWorkInProgressHook": null,
                "_forcedUpdate": false,
                "_instance": [Circular],
                "_isReRender": false,
                "_newState": null,
                "_numberOfReRenders": 0,
                "_renderPhaseUpdates": null,
                "_rendered": <Screen
                  navBarHidden={true}
                  navBarStyle="modal"
                  noRotationInVerticallyCompact={true}
                  showDismissButton={true}
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <FlatList
                      data={
                        Array [
                          Object {
                            "key": "55",
                            "submission": Object {
                              "avatarURL": "http://www.fillmurray.com/100/100",
                              "grade": "B-",
                              "name": "Donald Trump",
                              "sectionID": "1",
                              "status": "submitted",
                              "userID": "55",
                            },
                          },
                        ]
                      }
                      getItemLayout={[Function]}
                      horizontal={true}
                      initialNumToRender={null}
                      keyboardShouldPersistTaps="handled"
                      onLayout={[Function]}
                      onMomentumScrollEnd={[Function]}
                      pagingEnabled={true}
                      renderItem={[Function]}
                      showsHorizontalScrollIndicator={false}
                      style={
                        Object {
                          "marginLeft": -10,
                          "marginRight": -10,
                        }
                      }
                      windowSize={5}
                    />
                    <Tutorial
                      tutorials={
                        Array [
                          Object {
                            "id": "swipe-tutorial",
                            "image": Object {
                              "testUri": "../../../src/images/speedgrader/Swipe.png",
                            },
                            "text": "Swipe left or right to view other student submissions",
                          },
                        ]
                      }
                    />
                  </View>
                </Screen>,
                "_rendering": false,
                "_updater": [Circular],
                "_workInProgressHook": null,
              },
            },
          },
        ],
        "registerCommentProgress": [Function],
        "snapTo": [Function],
        "unregisterCommentProgress": [Function],
      }
    }
    gradeSubmissionWithRubric={[MockFunction]}
    isCurrentStudent={false}
    navigator={
      Object {
        "dismiss": [MockFunction],
        "dismissAllModals": [MockFunction],
        "isModal": false,
        "pop": [MockFunction],
        "replace": [MockFunction],
        "show": [MockFunction],
        "showWebView": [MockFunction],
        "traitCollection": [MockFunction],
      }
    }
    selectedAttachmentIndex={null}
    selectedIndex={null}
    selectedTabIndex={-1}
    setScrollEnabled={[Function]}
    submissionProps={
      Object {
        "avatarURL": "http://www.fillmurray.com/100/100",
        "grade": "B-",
        "name": "Donald Trump",
        "sectionID": "1",
        "status": "submitted",
        "userID": "55",
      }
    }
    userID="55"
  />
</A11yGroup>
`;
