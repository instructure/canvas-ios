// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Rubric renders a rubric 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RCTScrollView
    ListHeaderComponent={[Function]}
    data={
      Array [
        Object {
          "description": "A description",
          "id": "2",
          "key": "2",
          "long_description": "A long description",
          "points": 10,
          "ratings": Array [
            Object {
              "description": "No Credit",
              "id": "1",
              "points": 0,
            },
            Object {
              "description": "Partial Credit",
              "id": "2",
              "points": 5,
            },
            Object {
              "description": "Full Credit",
              "id": "3",
              "points": 10,
            },
          ],
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "criterionCommentInput": null,
        "ratings": Object {
          "2": Object {
            "comments": "",
            "points": 10,
            "rating_id": "3",
          },
        },
        "scrollEnabled": true,
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={2}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
      >
        <View>
          <GradePicker
            assignmentID="1"
            courseID="1"
            drawerState={
              DrawerState {
                "commentProgress": Object {},
                "currentSnap": 0,
                "deltaY": 0,
                "dragBegan": [Function],
                "drawerDidSnap": [Function],
                "drawers": Array [],
                "registerCommentProgress": [Function],
                "snapTo": [Function],
                "unregisterCommentProgress": [Function],
              }
            }
            gradeSubmissionWithRubric={[MockFunction]}
            isModeratedGrading={false}
            navigator={
              Object {
                "dismiss": [MockFunction],
                "dismissAllModals": [MockFunction],
                "isModal": false,
                "pop": [MockFunction],
                "replace": [MockFunction],
                "show": [MockFunction],
                "showWebView": [MockFunction],
                "traitCollection": [MockFunction],
              }
            }
            rubricAssessment={
              Object {
                "2": Object {
                  "comments": "",
                  "points": 10,
                  "rating_id": "3",
                },
              }
            }
            rubricGradePending={false}
            rubricItems={
              Array [
                Object {
                  "description": "A description",
                  "id": "2",
                  "long_description": "A long description",
                  "points": 10,
                  "ratings": Array [
                    Object {
                      "description": "No Credit",
                      "id": "1",
                      "points": 0,
                    },
                    Object {
                      "description": "Partial Credit",
                      "id": "2",
                      "points": 5,
                    },
                    Object {
                      "description": "Full Credit",
                      "id": "3",
                      "points": 10,
                    },
                  ],
                },
              ]
            }
            rubricScore={10}
            rubricSettings={
              Object {
                "free_form_criterion_comments": false,
                "id": "1",
                "points_possible": 100,
                "title": "A possible item",
              }
            }
            setScrollEnabled={[Function]}
            submissionID="1"
            unsavedChanges={Object {}}
            updateUnsavedChanges={[MockFunction]}
            useRubricForGrading={false}
            userID="1"
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginTop": 16,
                "paddingHorizontal": 16,
              }
            }
          >
            <View>
              <Text
                accessibilityRole="header"
                style={
                  Array [
                    Object {
                      "color": "#2D3B45",
                      "fontSize": 24,
                      "fontWeight": "800",
                    },
                    undefined,
                  ]
                }
              >
                Rubric
              </Text>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#2D3B45",
                      "fontSize": 16,
                    },
                    Object {
                      "color": "#8B969E",
                      "fontSize": 14,
                    },
                  ]
                }
                testID="rubric-score"
              >
                10 out of 100
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "paddingBottom": 12,
              "paddingHorizontal": 16,
              "paddingTop": 16,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#2D3B45",
                  "fontSize": 16,
                },
                Object {
                  "fontWeight": "600",
                },
              ]
            }
          >
            A description
          </Text>
          <View
            style={
              Object {
                "flexDirection": "row",
                "flexWrap": "wrap",
                "marginBottom": 6,
                "marginTop": 12,
              }
            }
          >
            <TouchableOpacity
              accessibilityLabel="10 — Full Credit"
              accessibilityTraits={
                Array [
                  "button",
                  "selected",
                ]
              }
              accessible={true}
              itemID="3"
              on={true}
              onLongPress={[Function]}
              onPress={[Function]}
              onPressOut={[Function]}
              style={
                Object {
                  "marginBottom": 4,
                  "marginRight": 4,
                }
              }
              testID="rubric-item.points-3"
              value={10}
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderColor": "#C7CDD1",
                      "borderRadius": 24,
                      "borderWidth": 0.5,
                      "flex": 1,
                      "height": 48,
                      "justifyContent": "center",
                      "minWidth": 48,
                      "paddingHorizontal": 8,
                    },
                    Object {
                      "marginBottom": 4,
                      "marginRight": 4,
                    },
                    Object {
                      "backgroundColor": "#008EE2",
                      "borderWidth": 0,
                    },
                  ]
                }
              >
                <Text
                  accessible={false}
                  style={
                    Array [
                      Object {
                        "color": "#2D3B45",
                        "fontSize": 16,
                      },
                      Object {
                        "color": "#FFFFFF",
                        "fontSize": 20,
                        "fontWeight": "500",
                      },
                    ]
                  }
                >
                  10
                </Text>
              </View>
            </TouchableOpacity>
            <TouchableOpacity
              accessibilityLabel="5 — Partial Credit"
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              itemID="2"
              on={false}
              onLongPress={[Function]}
              onPress={[Function]}
              onPressOut={[Function]}
              style={
                Object {
                  "marginBottom": 4,
                  "marginRight": 4,
                }
              }
              testID="rubric-item.points-2"
              value={5}
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderColor": "#C7CDD1",
                      "borderRadius": 24,
                      "borderWidth": 0.5,
                      "flex": 1,
                      "height": 48,
                      "justifyContent": "center",
                      "minWidth": 48,
                      "paddingHorizontal": 8,
                    },
                    Object {
                      "marginBottom": 4,
                      "marginRight": 4,
                    },
                  ]
                }
              >
                <Text
                  accessible={false}
                  style={
                    Array [
                      Object {
                        "color": "#2D3B45",
                        "fontSize": 16,
                      },
                      Object {
                        "color": "#8B969E",
                        "fontSize": 20,
                        "fontWeight": "500",
                      },
                    ]
                  }
                >
                  5
                </Text>
              </View>
            </TouchableOpacity>
            <TouchableOpacity
              accessibilityLabel="0 — No Credit"
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              itemID="1"
              on={false}
              onLongPress={[Function]}
              onPress={[Function]}
              onPressOut={[Function]}
              style={
                Object {
                  "marginBottom": 4,
                  "marginRight": 4,
                }
              }
              testID="rubric-item.points-1"
              value={0}
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderColor": "#C7CDD1",
                      "borderRadius": 24,
                      "borderWidth": 0.5,
                      "flex": 1,
                      "height": 48,
                      "justifyContent": "center",
                      "minWidth": 48,
                      "paddingHorizontal": 8,
                    },
                    Object {
                      "marginBottom": 4,
                      "marginRight": 4,
                    },
                  ]
                }
              >
                <Text
                  accessible={false}
                  style={
                    Array [
                      Object {
                        "color": "#2D3B45",
                        "fontSize": 16,
                      },
                      Object {
                        "color": "#8B969E",
                        "fontSize": 20,
                        "fontWeight": "500",
                      },
                    ]
                  }
                >
                  0
                </Text>
              </View>
            </TouchableOpacity>
            <TouchableOpacity
              accessibilityLabel="Customize Grade"
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              on={false}
              onPress={[Function]}
              style={
                Object {
                  "marginBottom": 4,
                  "marginRight": 4,
                }
              }
              testID="rubric-item.customize-grade-2"
              value=""
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderColor": "#C7CDD1",
                      "borderRadius": 24,
                      "borderWidth": 0.5,
                      "flex": 1,
                      "height": 48,
                      "justifyContent": "center",
                      "minWidth": 48,
                      "paddingHorizontal": 8,
                    },
                    Object {
                      "marginBottom": 4,
                      "marginRight": 4,
                    },
                  ]
                }
              >
                <Image
                  source={
                    Object {
                      "testUri": "../../../src/images/Add.png",
                    }
                  }
                  style={
                    Object {
                      "tintColor": "#8B969E",
                    }
                  }
                />
              </View>
            </TouchableOpacity>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <TouchableOpacity
              accessibilityRole="button"
              hitSlop={
                Object {
                  "bottom": 15,
                  "left": 15,
                  "right": 15,
                  "top": 15,
                }
              }
              onPress={[Function]}
              testID="rubric-item.description"
            >
              <View>
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#2D3B45",
                        "fontSize": 16,
                      },
                      Array [
                        Object {
                          "color": "#008EE2",
                          "fontSize": 16,
                          "fontWeight": "500",
                        },
                        Object {
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      ],
                    ]
                  }
                >
                  View Long Description
                </Text>
              </View>
            </TouchableOpacity>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Rubric renders the comment input when openCommentKeyboard is called 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RCTScrollView
    ListHeaderComponent={[Function]}
    data={
      Array [
        Object {
          "description": "A description",
          "id": "2",
          "key": "2",
          "long_description": "A long description",
          "points": 10,
          "ratings": Array [
            Object {
              "description": "No Credit",
              "id": "1",
              "points": 0,
            },
            Object {
              "description": "Partial Credit",
              "id": "2",
              "points": 5,
            },
            Object {
              "description": "Full Credit",
              "id": "3",
              "points": 10,
            },
          ],
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "criterionCommentInput": "2",
        "ratings": Object {
          "2": Object {
            "comments": "",
            "points": 10,
            "rating_id": "3",
          },
        },
        "scrollEnabled": true,
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={2}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
      >
        <View>
          <GradePicker
            assignmentID="1"
            courseID="1"
            drawerState={
              DrawerState {
                "commentProgress": Object {},
                "currentSnap": 0,
                "deltaY": 0,
                "dragBegan": [Function],
                "drawerDidSnap": [Function],
                "drawers": Array [],
                "registerCommentProgress": [Function],
                "snapTo": [Function],
                "unregisterCommentProgress": [Function],
              }
            }
            gradeSubmissionWithRubric={[MockFunction]}
            isModeratedGrading={false}
            navigator={
              Object {
                "dismiss": [MockFunction],
                "dismissAllModals": [MockFunction],
                "isModal": false,
                "pop": [MockFunction],
                "replace": [MockFunction],
                "show": [MockFunction],
                "showWebView": [MockFunction],
                "traitCollection": [MockFunction],
              }
            }
            rubricAssessment={
              Object {
                "2": Object {
                  "comments": "",
                  "points": 10,
                  "rating_id": "3",
                },
              }
            }
            rubricGradePending={false}
            rubricItems={
              Array [
                Object {
                  "description": "A description",
                  "id": "2",
                  "long_description": "A long description",
                  "points": 10,
                  "ratings": Array [
                    Object {
                      "description": "No Credit",
                      "id": "1",
                      "points": 0,
                    },
                    Object {
                      "description": "Partial Credit",
                      "id": "2",
                      "points": 5,
                    },
                    Object {
                      "description": "Full Credit",
                      "id": "3",
                      "points": 10,
                    },
                  ],
                },
              ]
            }
            rubricScore={10}
            rubricSettings={
              Object {
                "free_form_criterion_comments": true,
                "id": "1",
                "points_possible": 100,
                "title": "A possible item",
              }
            }
            setScrollEnabled={[Function]}
            submissionID="1"
            unsavedChanges={Object {}}
            updateUnsavedChanges={[MockFunction]}
            useRubricForGrading={false}
            userID="1"
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginTop": 16,
                "paddingHorizontal": 16,
              }
            }
          >
            <View>
              <Text
                accessibilityRole="header"
                style={
                  Array [
                    Object {
                      "color": "#2D3B45",
                      "fontSize": 24,
                      "fontWeight": "800",
                    },
                    undefined,
                  ]
                }
              >
                Rubric
              </Text>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#2D3B45",
                      "fontSize": 16,
                    },
                    Object {
                      "color": "#8B969E",
                      "fontSize": 14,
                    },
                  ]
                }
                testID="rubric-score"
              >
                10 out of 100
              </Text>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "paddingBottom": 12,
              "paddingHorizontal": 16,
              "paddingTop": 16,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#2D3B45",
                  "fontSize": 16,
                },
                Object {
                  "fontWeight": "600",
                },
              ]
            }
          >
            A description
          </Text>
          <View
            style={
              Object {
                "flexDirection": "row",
                "flexWrap": "wrap",
                "marginBottom": 6,
                "marginTop": 12,
              }
            }
          >
            <TouchableOpacity
              accessibilityLabel="Customize Grade 10"
              accessibilityTraits={
                Array [
                  "button",
                  "selected",
                ]
              }
              accessible={true}
              on={true}
              onPress={[Function]}
              style={
                Object {
                  "marginBottom": 4,
                  "marginRight": 4,
                }
              }
              testID="rubric-item.customize-grade-2"
              value="10"
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderColor": "#C7CDD1",
                      "borderRadius": 24,
                      "borderWidth": 0.5,
                      "flex": 1,
                      "height": 48,
                      "justifyContent": "center",
                      "minWidth": 48,
                      "paddingHorizontal": 8,
                    },
                    Object {
                      "marginBottom": 4,
                      "marginRight": 4,
                    },
                    Object {
                      "backgroundColor": "#008EE2",
                      "borderWidth": 0,
                    },
                  ]
                }
              >
                <Text
                  accessible={false}
                  style={
                    Array [
                      Object {
                        "color": "#2D3B45",
                        "fontSize": 16,
                      },
                      Object {
                        "color": "#FFFFFF",
                        "fontSize": 20,
                        "fontWeight": "500",
                      },
                    ]
                  }
                >
                  10
                </Text>
              </View>
            </TouchableOpacity>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <TouchableOpacity
              accessibilityRole="button"
              hitSlop={
                Object {
                  "bottom": 15,
                  "left": 15,
                  "right": 15,
                  "top": 15,
                }
              }
              onPress={[Function]}
              testID="rubric-item.add-comment-2"
            >
              <View>
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#2D3B45",
                        "fontSize": 16,
                      },
                      Array [
                        Object {
                          "color": "#008EE2",
                          "fontSize": 16,
                          "fontWeight": "500",
                        },
                        Object {
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      ],
                    ]
                  }
                >
                  Add Comment
                </Text>
              </View>
            </TouchableOpacity>
            <Text
              accessible={false}
              style={
                Array [
                  Object {
                    "color": "#2D3B45",
                    "fontSize": 16,
                  },
                  Object {
                    "alignSelf": "center",
                    "color": "#8B969E",
                    "fontSize": 12,
                    "paddingHorizontal": 6,
                  },
                ]
              }
            >
              •
            </Text>
            <TouchableOpacity
              accessibilityRole="button"
              hitSlop={
                Object {
                  "bottom": 15,
                  "left": 15,
                  "right": 15,
                  "top": 15,
                }
              }
              onPress={[Function]}
              testID="rubric-item.description"
            >
              <View>
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#2D3B45",
                        "fontSize": 16,
                      },
                      Array [
                        Object {
                          "color": "#008EE2",
                          "fontSize": 16,
                          "fontWeight": "500",
                        },
                        Object {
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      ],
                    ]
                  }
                >
                  View Long Description
                </Text>
              </View>
            </TouchableOpacity>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <View>
    <View
      style={
        Object {
          "alignItems": "flex-start",
          "backgroundColor": "#F5F5F5",
          "borderTopColor": "#C7CDD1",
          "borderTopWidth": 0.5,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "overflow": "hidden",
          "paddingRight": 16,
          "paddingVertical": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "backgroundColor": "#FFFFFF",
            "borderColor": "#C7CDD1",
            "borderRadius": 20,
            "borderWidth": 0.5,
            "flex": 1,
            "flexDirection": "row",
            "justifyContent": "space-between",
            "overflow": "hidden",
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          autoFocus={false}
          maxHeight={76}
          multiline={true}
          onBlur={[Function]}
          onChangeText={[Function]}
          placeholder="Comment"
          placeholderTextColor="#8B969E"
          rejectResponderTermination={true}
          style={
            Object {
              "flex": 1,
              "fontSize": 16,
              "lineHeight": 19,
              "marginBottom": 6,
              "marginLeft": 10,
              "marginRight": 24,
              "marginTop": 2,
            }
          }
          testID="comment-input.comment"
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "bottom": 0,
            "left": 0,
            "right": 0,
          },
          Object {
            "height": 0,
          },
          undefined,
        ]
      }
    />
  </View>
</View>
`;

exports[`Rubric renders the grade picker when there is no rubric 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RCTScrollView
    ListHeaderComponent={[Function]}
    data={Array []}
    disableVirtualization={false}
    extraData={
      Object {
        "criterionCommentInput": null,
        "ratings": Object {
          "2": Object {
            "comments": "",
            "points": 10,
            "rating_id": "3",
          },
        },
        "scrollEnabled": true,
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={2}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
      >
        <View>
          <GradePicker
            assignmentID="1"
            courseID="1"
            drawerState={
              DrawerState {
                "commentProgress": Object {},
                "currentSnap": 0,
                "deltaY": 0,
                "dragBegan": [Function],
                "drawerDidSnap": [Function],
                "drawers": Array [],
                "registerCommentProgress": [Function],
                "snapTo": [Function],
                "unregisterCommentProgress": [Function],
              }
            }
            gradeSubmissionWithRubric={[MockFunction]}
            isModeratedGrading={false}
            navigator={
              Object {
                "dismiss": [MockFunction],
                "dismissAllModals": [MockFunction],
                "isModal": false,
                "pop": [MockFunction],
                "replace": [MockFunction],
                "show": [MockFunction],
                "showWebView": [MockFunction],
                "traitCollection": [MockFunction],
              }
            }
            rubricAssessment={
              Object {
                "2": Object {
                  "comments": "",
                  "points": 10,
                  "rating_id": "3",
                },
              }
            }
            rubricGradePending={false}
            rubricItems={null}
            rubricScore={10}
            rubricSettings={
              Object {
                "free_form_criterion_comments": false,
                "id": "1",
                "points_possible": 100,
                "title": "A possible item",
              }
            }
            setScrollEnabled={[Function]}
            submissionID="1"
            unsavedChanges={Object {}}
            updateUnsavedChanges={[MockFunction]}
            useRubricForGrading={false}
            userID="1"
          />
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Rubric shows the activity indicator when saving a rubric score 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RCTScrollView
    ListHeaderComponent={[Function]}
    data={
      Array [
        Object {
          "description": "A description",
          "id": "2",
          "key": "2",
          "long_description": "A long description",
          "points": 10,
          "ratings": Array [
            Object {
              "description": "No Credit",
              "id": "1",
              "points": 0,
            },
            Object {
              "description": "Partial Credit",
              "id": "2",
              "points": 5,
            },
            Object {
              "description": "Full Credit",
              "id": "3",
              "points": 10,
            },
          ],
        },
      ]
    }
    disableVirtualization={false}
    extraData={
      Object {
        "criterionCommentInput": null,
        "ratings": Object {
          "2": Object {
            "comments": "",
            "points": 10,
            "rating_id": "3",
          },
        },
        "scrollEnabled": true,
      }
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={2}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
      >
        <View>
          <GradePicker
            assignmentID="1"
            courseID="1"
            drawerState={
              DrawerState {
                "commentProgress": Object {},
                "currentSnap": 0,
                "deltaY": 0,
                "dragBegan": [Function],
                "drawerDidSnap": [Function],
                "drawers": Array [],
                "registerCommentProgress": [Function],
                "snapTo": [Function],
                "unregisterCommentProgress": [Function],
              }
            }
            gradeSubmissionWithRubric={[MockFunction]}
            isModeratedGrading={false}
            navigator={
              Object {
                "dismiss": [MockFunction],
                "dismissAllModals": [MockFunction],
                "isModal": false,
                "pop": [MockFunction],
                "replace": [MockFunction],
                "show": [MockFunction],
                "showWebView": [MockFunction],
                "traitCollection": [MockFunction],
              }
            }
            rubricAssessment={
              Object {
                "2": Object {
                  "comments": "",
                  "points": 10,
                  "rating_id": "3",
                },
              }
            }
            rubricGradePending={true}
            rubricItems={
              Array [
                Object {
                  "description": "A description",
                  "id": "2",
                  "long_description": "A long description",
                  "points": 10,
                  "ratings": Array [
                    Object {
                      "description": "No Credit",
                      "id": "1",
                      "points": 0,
                    },
                    Object {
                      "description": "Partial Credit",
                      "id": "2",
                      "points": 5,
                    },
                    Object {
                      "description": "Full Credit",
                      "id": "3",
                      "points": 10,
                    },
                  ],
                },
              ]
            }
            rubricScore={10}
            rubricSettings={
              Object {
                "free_form_criterion_comments": false,
                "id": "1",
                "points_possible": 100,
                "title": "A possible item",
              }
            }
            setScrollEnabled={[Function]}
            submissionID="1"
            unsavedChanges={Object {}}
            updateUnsavedChanges={[MockFunction]}
            useRubricForGrading={false}
            userID="1"
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "marginTop": 16,
                "paddingHorizontal": 16,
              }
            }
          >
            <View>
              <Text
                accessibilityRole="header"
                style={
                  Array [
                    Object {
                      "color": "#2D3B45",
                      "fontSize": 24,
                      "fontWeight": "800",
                    },
                    undefined,
                  ]
                }
              >
                Rubric
              </Text>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#2D3B45",
                      "fontSize": 16,
                    },
                    Object {
                      "color": "#8B969E",
                      "fontSize": 14,
                    },
                  ]
                }
                testID="rubric-score"
              >
                10 out of 100
              </Text>
            </View>
            <ActivityIndicator
              animating={true}
              color="#999999"
              hidesWhenStopped={true}
              size="small"
            />
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Object {
              "paddingBottom": 12,
              "paddingHorizontal": 16,
              "paddingTop": 16,
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#2D3B45",
                  "fontSize": 16,
                },
                Object {
                  "fontWeight": "600",
                },
              ]
            }
          >
            A description
          </Text>
          <View
            style={
              Object {
                "flexDirection": "row",
                "flexWrap": "wrap",
                "marginBottom": 6,
                "marginTop": 12,
              }
            }
          >
            <TouchableOpacity
              accessibilityLabel="10 — Full Credit"
              accessibilityTraits={
                Array [
                  "button",
                  "selected",
                ]
              }
              accessible={true}
              itemID="3"
              on={true}
              onLongPress={[Function]}
              onPress={[Function]}
              onPressOut={[Function]}
              style={
                Object {
                  "marginBottom": 4,
                  "marginRight": 4,
                }
              }
              testID="rubric-item.points-3"
              value={10}
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderColor": "#C7CDD1",
                      "borderRadius": 24,
                      "borderWidth": 0.5,
                      "flex": 1,
                      "height": 48,
                      "justifyContent": "center",
                      "minWidth": 48,
                      "paddingHorizontal": 8,
                    },
                    Object {
                      "marginBottom": 4,
                      "marginRight": 4,
                    },
                    Object {
                      "backgroundColor": "#008EE2",
                      "borderWidth": 0,
                    },
                  ]
                }
              >
                <Text
                  accessible={false}
                  style={
                    Array [
                      Object {
                        "color": "#2D3B45",
                        "fontSize": 16,
                      },
                      Object {
                        "color": "#FFFFFF",
                        "fontSize": 20,
                        "fontWeight": "500",
                      },
                    ]
                  }
                >
                  10
                </Text>
              </View>
            </TouchableOpacity>
            <TouchableOpacity
              accessibilityLabel="5 — Partial Credit"
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              itemID="2"
              on={false}
              onLongPress={[Function]}
              onPress={[Function]}
              onPressOut={[Function]}
              style={
                Object {
                  "marginBottom": 4,
                  "marginRight": 4,
                }
              }
              testID="rubric-item.points-2"
              value={5}
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderColor": "#C7CDD1",
                      "borderRadius": 24,
                      "borderWidth": 0.5,
                      "flex": 1,
                      "height": 48,
                      "justifyContent": "center",
                      "minWidth": 48,
                      "paddingHorizontal": 8,
                    },
                    Object {
                      "marginBottom": 4,
                      "marginRight": 4,
                    },
                  ]
                }
              >
                <Text
                  accessible={false}
                  style={
                    Array [
                      Object {
                        "color": "#2D3B45",
                        "fontSize": 16,
                      },
                      Object {
                        "color": "#8B969E",
                        "fontSize": 20,
                        "fontWeight": "500",
                      },
                    ]
                  }
                >
                  5
                </Text>
              </View>
            </TouchableOpacity>
            <TouchableOpacity
              accessibilityLabel="0 — No Credit"
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              itemID="1"
              on={false}
              onLongPress={[Function]}
              onPress={[Function]}
              onPressOut={[Function]}
              style={
                Object {
                  "marginBottom": 4,
                  "marginRight": 4,
                }
              }
              testID="rubric-item.points-1"
              value={0}
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderColor": "#C7CDD1",
                      "borderRadius": 24,
                      "borderWidth": 0.5,
                      "flex": 1,
                      "height": 48,
                      "justifyContent": "center",
                      "minWidth": 48,
                      "paddingHorizontal": 8,
                    },
                    Object {
                      "marginBottom": 4,
                      "marginRight": 4,
                    },
                  ]
                }
              >
                <Text
                  accessible={false}
                  style={
                    Array [
                      Object {
                        "color": "#2D3B45",
                        "fontSize": 16,
                      },
                      Object {
                        "color": "#8B969E",
                        "fontSize": 20,
                        "fontWeight": "500",
                      },
                    ]
                  }
                >
                  0
                </Text>
              </View>
            </TouchableOpacity>
            <TouchableOpacity
              accessibilityLabel="Customize Grade"
              accessibilityTraits={
                Array [
                  "button",
                ]
              }
              accessible={true}
              on={false}
              onPress={[Function]}
              style={
                Object {
                  "marginBottom": 4,
                  "marginRight": 4,
                }
              }
              testID="rubric-item.customize-grade-2"
              value=""
            >
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "borderColor": "#C7CDD1",
                      "borderRadius": 24,
                      "borderWidth": 0.5,
                      "flex": 1,
                      "height": 48,
                      "justifyContent": "center",
                      "minWidth": 48,
                      "paddingHorizontal": 8,
                    },
                    Object {
                      "marginBottom": 4,
                      "marginRight": 4,
                    },
                  ]
                }
              >
                <Image
                  source={
                    Object {
                      "testUri": "../../../src/images/Add.png",
                    }
                  }
                  style={
                    Object {
                      "tintColor": "#8B969E",
                    }
                  }
                />
              </View>
            </TouchableOpacity>
          </View>
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <TouchableOpacity
              accessibilityRole="button"
              hitSlop={
                Object {
                  "bottom": 15,
                  "left": 15,
                  "right": 15,
                  "top": 15,
                }
              }
              onPress={[Function]}
              testID="rubric-item.description"
            >
              <View>
                <Text
                  style={
                    Array [
                      Object {
                        "color": "#2D3B45",
                        "fontSize": 16,
                      },
                      Array [
                        Object {
                          "color": "#008EE2",
                          "fontSize": 16,
                          "fontWeight": "500",
                        },
                        Object {
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      ],
                    ]
                  }
                >
                  View Long Description
                </Text>
              </View>
            </TouchableOpacity>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
