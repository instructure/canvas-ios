// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AnnouncementEdit provides defaults for new announcement 1`] = `
Array [
  Array [
    "courses",
    "1",
    Object {
      "attachment": null,
      "delayed_post_at": null,
      "is_announcement": true,
      "message": "required",
      "require_initial_post": false,
      "title": "No Title",
    },
  ],
]
`;

exports[`AnnouncementEdit renders 1`] = `
<Screen
  dismissButtonTitle="Cancel"
  rightBarButtons={
    Array [
      Object {
        "action": [Function],
        "style": "done",
        "testID": "announcements.edit.doneButton",
        "title": "Done",
      },
      Object {
        "accessibilityLabel": "Add attachment",
        "action": [Function],
        "badge": null,
        "image": Object {
          "testUri": "../../../src/images/paperclip-icon.png",
        },
        "testID": "announcements.edit.attachment-btn",
      },
    ]
  }
  title="Edit Announcement"
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <Modal
      animationType="fade"
      hardwareAccelerated={false}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      transparent={true}
      visible={false}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0.6)",
                "borderRadius": 12,
              },
              Object {
                "backgroundColor": "rgba(0,0,0,0.8)",
              },
              Object {
                "height": 170,
                "width": 170,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "column",
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "column",
                  "justifyContent": "center",
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "fontFamily": ".SFUIDisplay",
                    },
                    Object {
                      "color": "#fff",
                      "fontFamily": ".SFUIDisplay-semibold",
                      "fontSize": 24,
                    },
                    Array [
                      Object {
                        "alignItems": "center",
                        "color": "#fff",
                        "textAlign": "center",
                      },
                      undefined,
                    ],
                  ]
                }
              >
                Saving
              </Text>
            </View>
          </View>
          <ActivityIndicator
            animating={true}
            color="#fff"
            hidesWhenStopped={true}
            size="large"
            style={
              Object {
                "flex": 1,
                "marginTop": -40,
              }
            }
          />
        </View>
      </View>
    </Modal>
    <UnmetRequirementBanner
      testID="announcement.edit.unmet-requirement-banner"
      text="Invalid field"
      visible={false}
    />
    <KeyboardAwareScrollView
      enableAutoAutomaticScroll={false}
      keyboardShouldPersistTaps="handled"
      style={
        Object {
          "backgroundColor": "#F5F5F5",
          "flex": 1,
        }
      }
    >
      <Text
        accessibilityTraits="header"
        style={
          Array [
            Object {
              "color": "#73818C",
              "fontFamily": ".SFUIDisplay-semibold",
              "fontSize": 14,
              "marginBottom": 8,
              "marginLeft": 16,
              "marginTop": 16,
            },
            undefined,
          ]
        }
      >
        Title
      </Text>
      <View
        accessibilityLabel="Add title, text field"
        accessibilityTraits={Array []}
        onPress={[Function]}
        style={
          Array [
            Object {
              "borderTopColor": "#C7CDD1",
              "borderTopWidth": 0.5,
            },
            Object {
              "borderBottomColor": "#C7CDD1",
              "borderBottomWidth": 0.5,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "white",
                "flex": 1,
                "flexDirection": "row",
                "minHeight": 54,
                "paddingBottom": 12,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 12,
              },
              Object {
                "backgroundColor": "white",
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                  "flexDirection": "column",
                  "justifyContent": "center",
                },
                Object {
                  "marginLeft": 0,
                },
              ]
            }
          >
            <TextInput
              allowFontScaling={true}
              defaultValue="Cursed Hollow"
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder="Add title"
              rejectResponderTermination={true}
              style={
                Array [
                  Object {
                    "flex": 1,
                  },
                  undefined,
                ]
              }
              testID="announcements.edit.titleInput"
              underlineColorAndroid="transparent"
            />
          </View>
        </View>
      </View>
      <Text
        accessibilityTraits="header"
        style={
          Array [
            Object {
              "color": "#73818C",
              "fontFamily": ".SFUIDisplay-semibold",
              "fontSize": 14,
              "marginBottom": 8,
              "marginLeft": 16,
              "marginTop": 16,
            },
            undefined,
          ]
        }
      >
        Description
      </Text>
      <View
        style={
          Object {
            "backgroundColor": "white",
            "borderBottomColor": "#C7CDD1",
            "borderBottomWidth": 0.5,
            "borderTopColor": "#C7CDD1",
            "borderTopWidth": 0.5,
            "height": 200,
          }
        }
      >
        <RichTextEditor
          attachmentUploadPath="/courses/1/files"
          contentHeight={150}
          defaultValue="Gather tribute or face my curse."
          keyboardAware={false}
          navigator={
            Object {
              "dismiss": [MockFunction],
              "dismissAllModals": [MockFunction],
              "isModal": false,
              "pop": [MockFunction],
              "replace": [MockFunction],
              "show": [MockFunction],
              "showWebView": [MockFunction],
              "traitCollection": [MockFunction],
            }
          }
          onFocus={[Function]}
          placeholder="Add description (required)"
          scrollEnabled={true}
          showToolbar="always"
        />
      </View>
      <RequiredFieldSubscript
        title="A description is required"
        visible={false}
      />
      <View>
        <Text
          accessibilityTraits="header"
          style={
            Array [
              Object {
                "color": "#73818C",
                "fontFamily": ".SFUIDisplay-semibold",
                "fontSize": 14,
                "marginBottom": 8,
                "marginLeft": 16,
                "marginTop": 16,
              },
              undefined,
            ]
          }
        >
          Options
        </Text>
        <TouchableHighlight
          accessibilityLabel="Sections, All"
          accessibilityTraits={
            Array [
              "button",
            ]
          }
          onPress={[Function]}
          style={
            Array [
              Object {
                "borderTopColor": "#C7CDD1",
                "borderTopWidth": 0.5,
              },
              Object {
                "borderBottomColor": "#C7CDD1",
                "borderBottomWidth": 0.5,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "white",
                  "flex": 1,
                  "flexDirection": "row",
                  "minHeight": 54,
                  "paddingBottom": 12,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 12,
                },
                Object {
                  "backgroundColor": "white",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                    "flexDirection": "column",
                    "justifyContent": "center",
                  },
                  Object {
                    "marginLeft": 0,
                  },
                ]
              }
            >
              <Text
                ellipsizeMode="tail"
                numberOfLines={0}
                style={
                  Array [
                    Object {
                      "fontFamily": ".SFUIDisplay",
                    },
                    Object {
                      "color": "#2D3B45",
                      "fontSize": 16,
                    },
                    Array [
                      Object {
                        "fontWeight": "600",
                      },
                    ],
                    Object {
                      "fontFamily": ".SFUIDisplay-semibold",
                    },
                  ]
                }
              >
                Sections
              </Text>
            </View>
            <View
              style={
                Object {
                  "flex": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "flex-end",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                    }
                  }
                >
                  <Text
                    numberOfLines={1}
                    style={
                      Array [
                        Object {
                          "fontFamily": ".SFUIDisplay",
                        },
                        Object {
                          "color": "#2D3B45",
                          "fontSize": 16,
                        },
                        Object {},
                        Object {
                          "fontFamily": ".SFUIDisplay",
                        },
                      ]
                    }
                  >
                    All
                  </Text>
                  <View
                    style={
                      Array [
                        Object {
                          "alignSelf": "center",
                          "backgroundColor": "transparent",
                          "borderColor": "#c7c7cc",
                          "borderRightWidth": 2,
                          "borderTopWidth": 2,
                          "height": 10,
                          "marginLeft": 7,
                          "width": 10,
                        },
                        Object {
                          "transform": Array [
                            Object {
                              "rotate": "45deg",
                            },
                          ],
                        },
                      ]
                    }
                  />
                </View>
              </View>
            </View>
          </View>
        </TouchableHighlight>
        <TouchableHighlight
          accessibilityLabel="Delay Posting, Off"
          accessibilityTraits={
            Array [
              "button",
            ]
          }
          onPress={[Function]}
          style={
            Array [
              undefined,
              Object {
                "borderBottomColor": "#C7CDD1",
                "borderBottomWidth": 0.5,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "white",
                  "flex": 1,
                  "flexDirection": "row",
                  "minHeight": 54,
                  "paddingBottom": 12,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 12,
                },
                Object {
                  "backgroundColor": "white",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                    "flexDirection": "column",
                    "justifyContent": "center",
                  },
                  Object {
                    "marginLeft": 0,
                  },
                ]
              }
            >
              <Text
                ellipsizeMode="tail"
                numberOfLines={0}
                style={
                  Array [
                    Object {
                      "fontFamily": ".SFUIDisplay",
                    },
                    Object {
                      "color": "#2D3B45",
                      "fontSize": 16,
                    },
                    Array [
                      Object {
                        "fontWeight": "600",
                      },
                    ],
                    Object {
                      "fontFamily": ".SFUIDisplay-semibold",
                    },
                  ]
                }
              >
                Delay Posting
              </Text>
            </View>
            <View
              style={
                Object {
                  "flex": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "flex-end",
                  }
                }
              >
                <Switch
                  border="bottom"
                  identifier="announcements.edit.delay-posting-toggle"
                  onValueChange={[Function]}
                  testID="announcements.edit.delay-posting-toggle"
                  tintColor={null}
                  title="Delay Posting"
                  trackColor="#374A59"
                  value={false}
                />
              </View>
            </View>
          </View>
        </TouchableHighlight>
        <TouchableHighlight
          accessibilityLabel="Students must post before seeing replies, Off"
          accessibilityTraits={
            Array [
              "button",
            ]
          }
          onPress={[Function]}
          style={
            Array [
              undefined,
              Object {
                "borderBottomColor": "#C7CDD1",
                "borderBottomWidth": 0.5,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "white",
                  "flex": 1,
                  "flexDirection": "row",
                  "minHeight": 54,
                  "paddingBottom": 12,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 12,
                },
                Object {
                  "backgroundColor": "white",
                },
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                    "flexDirection": "column",
                    "justifyContent": "center",
                  },
                  Object {
                    "marginLeft": 0,
                  },
                ]
              }
            >
              <Text
                ellipsizeMode="tail"
                numberOfLines={0}
                style={
                  Array [
                    Object {
                      "fontFamily": ".SFUIDisplay",
                    },
                    Object {
                      "color": "#2D3B45",
                      "fontSize": 16,
                    },
                    Array [
                      Object {
                        "fontWeight": "600",
                      },
                    ],
                    Object {
                      "fontFamily": ".SFUIDisplay-semibold",
                    },
                  ]
                }
              >
                Students must post before seeing replies
              </Text>
            </View>
            <View
              style={
                Object {
                  "flex": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flex": 1,
                    "flexDirection": "row",
                    "justifyContent": "flex-end",
                  }
                }
              >
                <Switch
                  border="bottom"
                  onValueChange={[Function]}
                  tintColor={null}
                  title="Students must post before seeing replies"
                  trackColor="#374A59"
                  value={false}
                />
              </View>
            </View>
          </View>
        </TouchableHighlight>
      </View>
    </KeyboardAwareScrollView>
  </View>
</Screen>
`;

exports[`AnnouncementEdit updates with new props 1`] = `
<Screen
  dismissButtonTitle="Cancel"
  rightBarButtons={
    Array [
      Object {
        "action": [Function],
        "style": "done",
        "testID": "announcements.edit.doneButton",
        "title": "Done",
      },
      Object {
        "accessibilityLabel": "Add attachment",
        "action": [Function],
        "badge": null,
        "image": Object {
          "testUri": "../../../src/images/paperclip-icon.png",
        },
        "testID": "announcements.edit.attachment-btn",
      },
    ]
  }
  title="Edit Announcement"
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <ModalOverlay
      activityIndicatorColor="#fff"
      animationType="fade"
      backgroundColor="rgba(0,0,0,0.8)"
      height={170}
      showActivityIndicator={true}
      text="Saving"
      transparent={true}
      visible={true}
      width={170}
    />
    <UnmetRequirementBanner
      testID="announcement.edit.unmet-requirement-banner"
      text="Invalid field"
      visible={false}
    />
    <KeyboardAwareScrollView
      enableAutoAutomaticScroll={false}
      keyboardShouldPersistTaps="handled"
      style={
        Object {
          "backgroundColor": "#F5F5F5",
          "flex": 1,
        }
      }
    >
      <FormLabel>
        Title
      </FormLabel>
      <RowWithTextInput
        border="both"
        defaultValue="Cursed Hollow"
        identifier="announcements.edit.titleInput"
        onChangeText={[Function]}
        onFocus={[Function]}
        placeholder="Add title"
        title=""
      />
      <FormLabel>
        Description
      </FormLabel>
      <View
        style={
          Object {
            "backgroundColor": "white",
            "borderBottomColor": "#C7CDD1",
            "borderBottomWidth": 0.5,
            "borderTopColor": "#C7CDD1",
            "borderTopWidth": 0.5,
            "height": 200,
          }
        }
      >
        <RichTextEditor
          attachmentUploadPath="/courses/1/files"
          contentHeight={150}
          defaultValue="Gather tribute or face my curse."
          keyboardAware={false}
          navigator={
            Object {
              "dismiss": [MockFunction],
              "dismissAllModals": [MockFunction],
              "isModal": false,
              "pop": [MockFunction],
              "replace": [MockFunction],
              "show": [MockFunction],
              "showWebView": [MockFunction],
              "traitCollection": [MockFunction],
            }
          }
          onFocus={[Function]}
          placeholder="Add description (required)"
          scrollEnabled={true}
          showToolbar="always"
        />
      </View>
      <RequiredFieldSubscript
        title="A description is required"
        visible={false}
      />
      <View>
        <FormLabel>
          Options
        </FormLabel>
        <RowWithDetail
          accessories={<DisclosureIndicator />}
          border="both"
          detail="All"
          onPress={[Function]}
          title="Sections"
        />
        <RowWithSwitch
          border="bottom"
          identifier="announcements.edit.delay-posting-toggle"
          onValueChange={[Function]}
          title="Delay Posting"
          value={false}
        />
        <RowWithSwitch
          border="bottom"
          onValueChange={[Function]}
          title="Students must post before seeing replies"
          value={false}
        />
      </View>
    </KeyboardAwareScrollView>
  </View>
</Screen>
`;
