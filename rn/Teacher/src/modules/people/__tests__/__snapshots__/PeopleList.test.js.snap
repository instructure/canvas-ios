// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`People List renders 1`] = `
<Screen
  drawUnderNavBar={true}
  navBarColor="#f00"
  navBarStyle="dark"
  onTraitCollectionChange={[Function]}
  subtitle="Learn React Native"
  title="Address Book Course"
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RCTScrollView
      ItemSeparatorComponent={[Function]}
      ListEmptyComponent={
        <ListEmptyComponent
          title="No results"
        />
      }
      ListHeaderComponent={
        <View>
          <TypeAheadSearch
            defaultQuery=""
            endpoint="/search/recipients"
            onChangeText={[Function]}
            onNextRequestFinished={[Function]}
            onRequestFinished={[Function]}
            onRequestStarted={[Function]}
            parameters={[Function]}
          />
          <View
            style={
              Object {
                "alignItems": "flex-end",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingBottom": 8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 16,
              }
            }
          >
            <Heading1>
              All People
            </Heading1>
            <LinkButton
              accessibilityLabel="Filter People"
              onPress={[Function]}
              style={
                Object {
                  "marginBottom": 1,
                }
              }
              testID="peopleList.filterBy"
            >
              Filter
            </LinkButton>
          </View>
        </View>
      }
      data={Array []}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      keyboardDismissMode="on-drag"
      maxToRenderPerBatch={10}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReached={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      refreshing={false}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <View
          onLayout={[Function]}
        >
          <View>
            <TypeAheadSearch
              defaultQuery=""
              endpoint="/search/recipients"
              onChangeText={[Function]}
              onNextRequestFinished={[Function]}
              onRequestFinished={[Function]}
              onRequestStarted={[Function]}
              parameters={[Function]}
            />
            <View
              style={
                Object {
                  "alignItems": "flex-end",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "paddingBottom": 8,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 16,
                }
              }
            >
              <Text
                accessibilityTraits="header"
                style={
                  Array [
                    Object {
                      "fontFamily": ".SFUIDisplay",
                    },
                    Object {
                      "color": "#2D3B45",
                      "fontFamily": ".SFUIDisplay-heavy",
                      "fontSize": 24,
                    },
                    undefined,
                  ]
                }
              >
                All People
              </Text>
              <View
                accessibilityLabel="Filter People"
                accessible={true}
                hitSlop={
                  Object {
                    "bottom": 15,
                    "left": 15,
                    "right": 15,
                    "top": 15,
                  }
                }
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "marginBottom": 1,
                    "opacity": 1,
                  }
                }
                testID="peopleList.filterBy"
              >
                <View>
                  <Text
                    style={
                      Array [
                        Object {
                          "fontFamily": ".SFUIDisplay",
                        },
                        Object {
                          "color": "#2D3B45",
                          "fontSize": 16,
                        },
                        Array [
                          Object {
                            "color": "#374A59",
                            "fontSize": 16,
                            "fontWeight": "500",
                          },
                          undefined,
                        ],
                        Object {
                          "fontFamily": ".SFUIDisplay-medium",
                        },
                      ]
                    }
                  >
                    Filter
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "height": 100,
              "justifyContent": "center",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "fontFamily": ".SFUIDisplay",
                },
                Object {
                  "color": "#2D3B45",
                  "fontFamily": ".SFUIDisplay-semibold",
                  "fontSize": 16,
                },
                undefined,
              ]
            }
          >
            No results
          </Text>
        </View>
      </View>
    </RCTScrollView>
  </View>
</Screen>
`;

exports[`People List test update filter 1`] = `
<Screen
  drawUnderNavBar={true}
  navBarColor="#f00"
  navBarStyle="dark"
  onTraitCollectionChange={[Function]}
  subtitle="Learn React Native"
  title="Address Book Course"
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RCTScrollView
      ItemSeparatorComponent={[Function]}
      ListEmptyComponent={
        <ListEmptyComponent
          title="No results"
        />
      }
      ListHeaderComponent={
        <View>
          <TypeAheadSearch
            defaultQuery=""
            endpoint="/search/recipients"
            onChangeText={[Function]}
            onNextRequestFinished={[Function]}
            onRequestFinished={[Function]}
            onRequestStarted={[Function]}
            parameters={[Function]}
          />
          <View
            style={
              Object {
                "alignItems": "flex-end",
                "flexDirection": "row",
                "justifyContent": "space-between",
                "paddingBottom": 8,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 16,
              }
            }
          >
            <Heading1>
              All People
            </Heading1>
            <LinkButton
              accessibilityLabel="Filter People"
              onPress={[Function]}
              style={
                Object {
                  "marginBottom": 1,
                }
              }
              testID="peopleList.filterBy"
            >
              Filter
            </LinkButton>
          </View>
        </View>
      }
      data={
        Array [
          Object {
            "avatar_url": "https://training.instructure.com/images/thumbnails/39010913/U1SNohq7Gn6r1PQVxylQnaHZzR5edu9os1FfEGz9",
            "common_courses": Object {
              "24219": Array [
                "TeacherEnrollment",
              ],
            },
            "common_groups": Object {},
            "full_name": "nlambson",
            "id": "4634548",
          },
          Object {
            "avatar_url": "https://mobiledev.instructure.com/images/thumbnails/106457231/qHO3rtlZoJGhmUZROqY8BgXx0gBL5JWlbqWMHPSv",
            "common_courses": Object {
              "24219": Array [
                "StudentEnrollment",
              ],
            },
            "common_groups": Object {},
            "full_name": "Lance",
            "id": "8253362",
          },
          Object {
            "avatar_url": "https://mobiledev.instructure.com/images/thumbnails/170000000004831/5UA86Fg8SxqHjdnZ0EpLbGJCHd43mFP7UO66CexD",
            "common_courses": Object {
              "24219": Array [
                "TeacherEnrollment",
              ],
            },
            "common_groups": Object {},
            "full_name": "Brady Larson",
            "id": "170000003356518",
          },
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      keyboardDismissMode="on-drag"
      maxToRenderPerBatch={10}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReached={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      refreshing={false}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <View
          onLayout={[Function]}
        >
          <View>
            <TypeAheadSearch
              defaultQuery=""
              endpoint="/search/recipients"
              onChangeText={[Function]}
              onNextRequestFinished={[Function]}
              onRequestFinished={[Function]}
              onRequestStarted={[Function]}
              parameters={[Function]}
            />
            <View
              style={
                Object {
                  "alignItems": "flex-end",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                  "paddingBottom": 8,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 16,
                }
              }
            >
              <Text
                accessibilityTraits="header"
                style={
                  Array [
                    Object {
                      "fontFamily": ".SFUIDisplay",
                    },
                    Object {
                      "color": "#2D3B45",
                      "fontFamily": ".SFUIDisplay-heavy",
                      "fontSize": 24,
                    },
                    undefined,
                  ]
                }
              >
                All People
              </Text>
              <View
                accessibilityLabel="Filter People"
                accessible={true}
                hitSlop={
                  Object {
                    "bottom": 15,
                    "left": 15,
                    "right": 15,
                    "top": 15,
                  }
                }
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "marginBottom": 1,
                    "opacity": 1,
                  }
                }
                testID="peopleList.filterBy"
              >
                <View>
                  <Text
                    style={
                      Array [
                        Object {
                          "fontFamily": ".SFUIDisplay",
                        },
                        Object {
                          "color": "#2D3B45",
                          "fontSize": 16,
                        },
                        Array [
                          Object {
                            "color": "#374A59",
                            "fontSize": 16,
                            "fontWeight": "500",
                          },
                          undefined,
                        ],
                        Object {
                          "fontFamily": ".SFUIDisplay-medium",
                        },
                      ]
                    }
                  >
                    Filter
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <Row
            border="both"
            disclosureIndicator={false}
            onPress={[Function]}
            renderImage={[Function]}
            selected={false}
            subtitle="Teacher"
            testID="4634548"
            title="nlambson"
          />
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#C7CDD1",
                  "height": 0.5,
                },
                undefined,
              ]
            }
          />
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <Row
            border="bottom"
            disclosureIndicator={false}
            onPress={[Function]}
            renderImage={[Function]}
            selected={false}
            subtitle="Student"
            testID="8253362"
            title="Lance"
          />
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#C7CDD1",
                  "height": 0.5,
                },
                undefined,
              ]
            }
          />
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <Row
            border="bottom"
            disclosureIndicator={false}
            onPress={[Function]}
            renderImage={[Function]}
            selected={false}
            subtitle="Teacher"
            testID="170000003356518"
            title="Brady Larson"
          />
        </View>
        <View
          style={
            Object {
              "height": 0,
            }
          }
        />
      </View>
    </RCTScrollView>
  </View>
</Screen>
`;
