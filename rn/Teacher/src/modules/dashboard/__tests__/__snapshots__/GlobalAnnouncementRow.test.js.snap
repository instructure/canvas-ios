// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GlobalAnnouncementRow renders calendar announcements 1`] = `
<_default
  contentStyle={
    Array [
      Object {
        "borderColor": "#008EE2",
        "borderWidth": 1,
      },
    ]
  }
  hideShadow={true}
>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "width": 40,
          },
          Object {
            "backgroundColor": "#008EE2",
          },
        ]
      }
    >
      <Image
        source={
          Object {
            "testUri": "../../../src/images/dashboard/calendar.png",
          }
        }
        style={
          Object {
            "marginTop": 14,
            "tintColor": "#FFFFFF",
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flex": 1,
          "marginHorizontal": 12,
          "marginVertical": 8,
        }
      }
    >
      <ForwardRef
        accessibilityTraits="button"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 56,
            "right": 16,
            "top": 8,
          }
        }
        onPress={[Function]}
        testID="AccountNotification.1.toggleButton"
        underlayColor="transparent"
      >
        <View>
          <Text
            style={
              Object {
                "fontWeight": "600",
                "marginRight": 32,
              }
            }
          >
            Permission Slips!
          </Text>
          <SubTitle>
            Tap to view announcement
          </SubTitle>
        </View>
      </ForwardRef>
      <CanvasWebView
        accessibilityElementsHidden={true}
        automaticallySetHeight={true}
        html="Don’t forget your permission slips this Wednesday."
        isOpaque={false}
        navigator={
          Object {
            "dismiss": [MockFunction],
            "dismissAllModals": [MockFunction],
            "isModal": false,
            "pop": [MockFunction],
            "replace": [MockFunction],
            "show": [MockFunction],
            "showWebView": [MockFunction],
            "traitCollection": [MockFunction],
          }
        }
        scrollEnabled={true}
        style={
          Object {
            "height": 0,
            "overflow": "hidden",
          }
        }
      />
    </View>
  </View>
</_default>
`;

exports[`GlobalAnnouncementRow renders error announcements 1`] = `
<_default
  contentStyle={
    Array [
      Object {
        "borderColor": "#EE0612",
        "borderWidth": 1,
      },
    ]
  }
  hideShadow={true}
>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "width": 40,
          },
          Object {
            "backgroundColor": "#EE0612",
          },
        ]
      }
    >
      <Image
        source={
          Object {
            "testUri": "../../../src/images/Warning.png",
          }
        }
        style={
          Object {
            "marginTop": 14,
            "tintColor": "#FFFFFF",
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flex": 1,
          "marginHorizontal": 12,
          "marginVertical": 8,
        }
      }
    >
      <ForwardRef
        accessibilityTraits="button"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 56,
            "right": 16,
            "top": 8,
          }
        }
        onPress={[Function]}
        testID="AccountNotification.1.toggleButton"
        underlayColor="transparent"
      >
        <View>
          <Text
            style={
              Object {
                "fontWeight": "600",
                "marginRight": 32,
              }
            }
          >
            Permission Slips!
          </Text>
          <SubTitle>
            Tap to view announcement
          </SubTitle>
        </View>
      </ForwardRef>
      <CanvasWebView
        accessibilityElementsHidden={true}
        automaticallySetHeight={true}
        html="Don’t forget your permission slips this Wednesday."
        isOpaque={false}
        navigator={
          Object {
            "dismiss": [MockFunction],
            "dismissAllModals": [MockFunction],
            "isModal": false,
            "pop": [MockFunction],
            "replace": [MockFunction],
            "show": [MockFunction],
            "showWebView": [MockFunction],
            "traitCollection": [MockFunction],
          }
        }
        scrollEnabled={true}
        style={
          Object {
            "height": 0,
            "overflow": "hidden",
          }
        }
      />
    </View>
  </View>
</_default>
`;

exports[`GlobalAnnouncementRow renders information announcements 1`] = `
<_default
  contentStyle={
    Array [
      Object {
        "borderColor": "#008EE2",
        "borderWidth": 1,
      },
    ]
  }
  hideShadow={true}
>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "width": 40,
          },
          Object {
            "backgroundColor": "#008EE2",
          },
        ]
      }
    >
      <Image
        source={
          Object {
            "testUri": "../../../src/images/dashboard/info.png",
          }
        }
        style={
          Object {
            "marginTop": 14,
            "tintColor": "#FFFFFF",
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flex": 1,
          "marginHorizontal": 12,
          "marginVertical": 8,
        }
      }
    >
      <ForwardRef
        accessibilityTraits="button"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 56,
            "right": 16,
            "top": 8,
          }
        }
        onPress={[Function]}
        testID="AccountNotification.1.toggleButton"
        underlayColor="transparent"
      >
        <View>
          <Text
            style={
              Object {
                "fontWeight": "600",
                "marginRight": 32,
              }
            }
          >
            Permission Slips!
          </Text>
          <SubTitle>
            Tap to view announcement
          </SubTitle>
        </View>
      </ForwardRef>
      <CanvasWebView
        accessibilityElementsHidden={true}
        automaticallySetHeight={true}
        html="Don’t forget your permission slips this Wednesday."
        isOpaque={false}
        navigator={
          Object {
            "dismiss": [MockFunction],
            "dismissAllModals": [MockFunction],
            "isModal": false,
            "pop": [MockFunction],
            "replace": [MockFunction],
            "show": [MockFunction],
            "showWebView": [MockFunction],
            "traitCollection": [MockFunction],
          }
        }
        scrollEnabled={true}
        style={
          Object {
            "height": 0,
            "overflow": "hidden",
          }
        }
      />
    </View>
  </View>
</_default>
`;

exports[`GlobalAnnouncementRow renders question announcements 1`] = `
<_default
  contentStyle={
    Array [
      Object {
        "borderColor": "#008EE2",
        "borderWidth": 1,
      },
    ]
  }
  hideShadow={true}
>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "width": 40,
          },
          Object {
            "backgroundColor": "#008EE2",
          },
        ]
      }
    >
      <Image
        source={
          Object {
            "testUri": "../../../src/images/dashboard/help.png",
          }
        }
        style={
          Object {
            "marginTop": 14,
            "tintColor": "#FFFFFF",
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flex": 1,
          "marginHorizontal": 12,
          "marginVertical": 8,
        }
      }
    >
      <ForwardRef
        accessibilityTraits="button"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 56,
            "right": 16,
            "top": 8,
          }
        }
        onPress={[Function]}
        testID="AccountNotification.1.toggleButton"
        underlayColor="transparent"
      >
        <View>
          <Text
            style={
              Object {
                "fontWeight": "600",
                "marginRight": 32,
              }
            }
          >
            Permission Slips!
          </Text>
          <SubTitle>
            Tap to view announcement
          </SubTitle>
        </View>
      </ForwardRef>
      <CanvasWebView
        accessibilityElementsHidden={true}
        automaticallySetHeight={true}
        html="Don’t forget your permission slips this Wednesday."
        isOpaque={false}
        navigator={
          Object {
            "dismiss": [MockFunction],
            "dismissAllModals": [MockFunction],
            "isModal": false,
            "pop": [MockFunction],
            "replace": [MockFunction],
            "show": [MockFunction],
            "showWebView": [MockFunction],
            "traitCollection": [MockFunction],
          }
        }
        scrollEnabled={true}
        style={
          Object {
            "height": 0,
            "overflow": "hidden",
          }
        }
      />
    </View>
  </View>
</_default>
`;

exports[`GlobalAnnouncementRow renders unexpected icon as information 1`] = `
<_default
  contentStyle={
    Array [
      Object {
        "borderColor": "#008EE2",
        "borderWidth": 1,
      },
    ]
  }
  hideShadow={true}
>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "width": 40,
          },
          Object {
            "backgroundColor": "#008EE2",
          },
        ]
      }
    >
      <Image
        source={
          Object {
            "testUri": "../../../src/images/dashboard/info.png",
          }
        }
        style={
          Object {
            "marginTop": 14,
            "tintColor": "#FFFFFF",
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flex": 1,
          "marginHorizontal": 12,
          "marginVertical": 8,
        }
      }
    >
      <ForwardRef
        accessibilityTraits="button"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 56,
            "right": 16,
            "top": 8,
          }
        }
        onPress={[Function]}
        testID="AccountNotification.1.toggleButton"
        underlayColor="transparent"
      >
        <View>
          <Text
            style={
              Object {
                "fontWeight": "600",
                "marginRight": 32,
              }
            }
          >
            Permission Slips!
          </Text>
          <SubTitle>
            Tap to view announcement
          </SubTitle>
        </View>
      </ForwardRef>
      <CanvasWebView
        accessibilityElementsHidden={true}
        automaticallySetHeight={true}
        html="Don’t forget your permission slips this Wednesday."
        isOpaque={false}
        navigator={
          Object {
            "dismiss": [MockFunction],
            "dismissAllModals": [MockFunction],
            "isModal": false,
            "pop": [MockFunction],
            "replace": [MockFunction],
            "show": [MockFunction],
            "showWebView": [MockFunction],
            "traitCollection": [MockFunction],
          }
        }
        scrollEnabled={true}
        style={
          Object {
            "height": 0,
            "overflow": "hidden",
          }
        }
      />
    </View>
  </View>
</_default>
`;

exports[`GlobalAnnouncementRow renders warning announcements 1`] = `
<_default
  contentStyle={
    Array [
      Object {
        "borderColor": "#FC5E13",
        "borderWidth": 1,
      },
    ]
  }
  hideShadow={true}
>
  <View
    style={
      Object {
        "flexDirection": "row",
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "width": 40,
          },
          Object {
            "backgroundColor": "#FC5E13",
          },
        ]
      }
    >
      <Image
        source={
          Object {
            "testUri": "../../../src/images/Warning.png",
          }
        }
        style={
          Object {
            "marginTop": 14,
            "tintColor": "#FFFFFF",
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "flex": 1,
          "marginHorizontal": 12,
          "marginVertical": 8,
        }
      }
    >
      <ForwardRef
        accessibilityTraits="button"
        hitSlop={
          Object {
            "bottom": 16,
            "left": 56,
            "right": 16,
            "top": 8,
          }
        }
        onPress={[Function]}
        testID="AccountNotification.1.toggleButton"
        underlayColor="transparent"
      >
        <View>
          <Text
            style={
              Object {
                "fontWeight": "600",
                "marginRight": 32,
              }
            }
          >
            Permission Slips!
          </Text>
          <SubTitle>
            Tap to view announcement
          </SubTitle>
        </View>
      </ForwardRef>
      <CanvasWebView
        accessibilityElementsHidden={true}
        automaticallySetHeight={true}
        html="Don’t forget your permission slips this Wednesday."
        isOpaque={false}
        navigator={
          Object {
            "dismiss": [MockFunction],
            "dismissAllModals": [MockFunction],
            "isModal": false,
            "pop": [MockFunction],
            "replace": [MockFunction],
            "show": [MockFunction],
            "showWebView": [MockFunction],
            "traitCollection": [MockFunction],
          }
        }
        scrollEnabled={true}
        style={
          Object {
            "height": 0,
            "overflow": "hidden",
          }
        }
      />
    </View>
  </View>
</_default>
`;
