// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConversationDetails doesnt render messages that are pendingDelete 1`] = `
<Screen
  customPageViewPath="/conversations"
  drawUnderNavBar={true}
  navBarStyle="global"
  rightBarButtons={
    Array [
      Object {
        "accessibilityLabel": "Conversation options",
        "action": [Function],
        "image": Object {
          "testUri": "../../../src/images/kabob.png",
        },
        "testID": "inbox.detail.options.button",
      },
    ]
  }
  showDismissButton={true}
  title="Message Details"
>
  <View
    style={
      Object {
        "backgroundColor": "#F5F5F5",
        "flex": 1,
      }
    }
  >
    <FlatList
      ItemSeparatorComponent={[Function]}
      ListHeaderComponent={
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#FFFFFF",
              "borderTopColor": "#C7CDD1",
              "borderTopWidth": 0.5,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "padding": 16,
              "paddingBottom": 8,
            }
          }
        >
          <Heading1>
            learn to write code
          </Heading1>
          <TouchableOpacity
            accessibilityLabel="Un-starred"
            accessibilityTraits="button"
            focusedOpacity={0.7}
            hitSlop={
              Object {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            onPress={[Function]}
            testID="inbox.detail.not-starred"
          >
            <Image
              source={
                Object {
                  "uri": "starLine",
                }
              }
              style={
                Object {
                  "height": 24,
                  "tintColor": "#008EE2",
                  "width": 24,
                }
              }
            />
          </TouchableOpacity>
        </View>
      }
      data={Array []}
      keyExtractor={[Function]}
      renderItem={[Function]}
      style={
        Object {
          "backgroundColor": "#F5F5F5",
        }
      }
    />
  </View>
</Screen>
`;

exports[`ConversationDetails renders correctly 1`] = `
<Screen
  customPageViewPath="/conversations"
  drawUnderNavBar={true}
  navBarStyle="global"
  rightBarButtons={
    Array [
      Object {
        "accessibilityLabel": "Conversation options",
        "action": [Function],
        "image": Object {
          "testUri": "../../../src/images/kabob.png",
        },
        "testID": "inbox.detail.options.button",
      },
    ]
  }
  showDismissButton={true}
  title="Message Details"
>
  <View
    style={
      Object {
        "backgroundColor": "#F5F5F5",
        "flex": 1,
      }
    }
  >
    <FlatList
      ItemSeparatorComponent={[Function]}
      ListHeaderComponent={
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#FFFFFF",
              "borderTopColor": "#C7CDD1",
              "borderTopWidth": 0.5,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "padding": 16,
              "paddingBottom": 8,
            }
          }
        >
          <Heading1>
            learn to write code
          </Heading1>
          <TouchableOpacity
            accessibilityLabel="Un-starred"
            accessibilityTraits="button"
            focusedOpacity={0.7}
            hitSlop={
              Object {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            onPress={[Function]}
            testID="inbox.detail.not-starred"
          >
            <Image
              source={
                Object {
                  "uri": "starLine",
                }
              }
              style={
                Object {
                  "height": 24,
                  "tintColor": "#008EE2",
                  "width": 24,
                }
              }
            />
          </TouchableOpacity>
        </View>
      }
      data={Array []}
      keyExtractor={[Function]}
      renderItem={[Function]}
      style={
        Object {
          "backgroundColor": "#F5F5F5",
        }
      }
    />
  </View>
</Screen>
`;

exports[`ConversationDetails renders correctly with no conversation 1`] = `
<Screen
  customPageViewPath="/conversations"
  drawUnderNavBar={true}
  navBarStyle="global"
  rightBarButtons={
    Array [
      Object {
        "accessibilityLabel": "Conversation options",
        "action": [Function],
        "image": Object {
          "testUri": "../../../src/images/kabob.png",
        },
        "testID": "inbox.detail.options.button",
      },
    ]
  }
  showDismissButton={true}
  title="Message Details"
>
  <View
    style={
      Object {
        "backgroundColor": "#F5F5F5",
        "flex": 1,
      }
    }
  >
    <FlatList
      ItemSeparatorComponent={[Function]}
      ListHeaderComponent={<View />}
      data={Array []}
      keyExtractor={[Function]}
      renderItem={[Function]}
      style={
        Object {
          "backgroundColor": "#F5F5F5",
        }
      }
    />
  </View>
</Screen>
`;

exports[`ConversationDetails renders correctly with some messages 1`] = `
<Screen
  customPageViewPath="/conversations"
  drawUnderNavBar={true}
  navBarStyle="global"
  rightBarButtons={
    Array [
      Object {
        "accessibilityLabel": "Conversation options",
        "action": [Function],
        "image": Object {
          "testUri": "../../../src/images/kabob.png",
        },
        "testID": "inbox.detail.options.button",
      },
    ]
  }
  showDismissButton={true}
  title="Message Details"
>
  <View
    style={
      Object {
        "backgroundColor": "#F5F5F5",
        "flex": 1,
      }
    }
  >
    <FlatList
      ItemSeparatorComponent={[Function]}
      ListHeaderComponent={
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#FFFFFF",
              "borderTopColor": "#C7CDD1",
              "borderTopWidth": 0.5,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "padding": 16,
              "paddingBottom": 8,
            }
          }
        >
          <Heading1>
            learn to write code
          </Heading1>
          <TouchableOpacity
            accessibilityLabel="Un-starred"
            accessibilityTraits="button"
            focusedOpacity={0.7}
            hitSlop={
              Object {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            onPress={[Function]}
            testID="inbox.detail.not-starred"
          >
            <Image
              source={
                Object {
                  "uri": "starLine",
                }
              }
              style={
                Object {
                  "height": 24,
                  "tintColor": "#008EE2",
                  "width": 24,
                }
              }
            />
          </TouchableOpacity>
        </View>
      }
      data={
        Array [
          Object {
            "attachments": Array [
              Object {
                "display_name": "something.pdf",
                "id": "1",
                "mime_class": "pdf",
              },
            ],
            "author_id": "1234",
            "body": "this is neat",
            "created_at": "2037-06-01T05:59:00Z",
            "generated": false,
            "id": "123456789",
          },
        ]
      }
      keyExtractor={[Function]}
      renderItem={[Function]}
      style={
        Object {
          "backgroundColor": "#F5F5F5",
        }
      }
    />
  </View>
</Screen>
`;

exports[`ConversationDetails renders correctly with some messages 2`] = `
<list>
  <item
    key="123456789"
  >
    <ConversationMessageRow
      conversation={
        Object {
          "audience": Array [],
          "audience_contexts": Object {},
          "avatar_url": "http://www.fillmurray.com/200/300",
          "context_code": "course_1",
          "context_name": "Test Class",
          "id": "1",
          "last_authored_message": "this is the worst class ever",
          "last_authored_message_at": "2037-06-01T05:59:00Z",
          "last_message": "this is the worst class ever",
          "last_message_at": "2037-06-01T05:59:00Z",
          "message_count": 2,
          "participants": Array [
            Object {
              "id": "1234",
              "name": "artorias of the abyss",
            },
            Object {
              "id": "6789",
              "name": "solaire of astora",
            },
          ],
          "private": false,
          "properties": null,
          "starred": false,
          "subject": "learn to write code",
          "subscribed": false,
          "visible": true,
          "workflow_state": "read",
        }
      }
      firstMessage={true}
      message={
        Object {
          "attachments": Array [
            Object {
              "display_name": "something.pdf",
              "id": "1",
              "mime_class": "pdf",
            },
          ],
          "author_id": "1234",
          "body": "this is neat",
          "created_at": "2037-06-01T05:59:00Z",
          "generated": false,
          "id": "123456789",
        }
      }
      navigator={
        Object {
          "dismiss": [MockFunction],
          "dismissAllModals": [MockFunction],
          "isModal": false,
          "pop": [MockFunction],
          "replace": [MockFunction],
          "show": [MockFunction],
          "showWebView": [MockFunction],
          "traitCollection": [MockFunction],
        }
      }
      onReply={[Function]}
      showOptionsActionSheet={[Function]}
    />
  </item>
</list>
`;

exports[`ConversationDetails renders with alternate data 1`] = `
<Screen
  customPageViewPath="/conversations"
  drawUnderNavBar={true}
  navBarStyle="global"
  rightBarButtons={
    Array [
      Object {
        "accessibilityLabel": "Conversation options",
        "action": [Function],
        "image": Object {
          "testUri": "../../../src/images/kabob.png",
        },
        "testID": "inbox.detail.options.button",
      },
    ]
  }
  showDismissButton={true}
  title="Message Details"
>
  <View
    style={
      Object {
        "backgroundColor": "#F5F5F5",
        "flex": 1,
      }
    }
  >
    <FlatList
      ItemSeparatorComponent={[Function]}
      ListHeaderComponent={
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#FFFFFF",
              "borderTopColor": "#C7CDD1",
              "borderTopWidth": 0.5,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "padding": 16,
              "paddingBottom": 8,
            }
          }
        >
          <Heading1>
            No Subject
          </Heading1>
          <TouchableOpacity
            accessibilityLabel="Starred"
            accessibilityTraits="button"
            focusedOpacity={0.7}
            hitSlop={
              Object {
                "bottom": 10,
                "left": 10,
                "right": 10,
                "top": 10,
              }
            }
            onPress={[Function]}
            testID="inbox.detail.starred"
          >
            <Image
              source={
                Object {
                  "uri": "starSolid",
                }
              }
              style={
                Object {
                  "height": 24,
                  "tintColor": "#008EE2",
                  "width": 24,
                }
              }
            />
          </TouchableOpacity>
        </View>
      }
      data={Array []}
      keyExtractor={[Function]}
      renderItem={[Function]}
      style={
        Object {
          "backgroundColor": "#F5F5F5",
        }
      }
    />
  </View>
</Screen>
`;
