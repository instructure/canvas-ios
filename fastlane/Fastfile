default_platform(:ios)

# Ad-Hoc
PROVISIONING_PROFILE_STUDENT_AD_HOC = "match AdHoc com.instructure.icanvas"
PROVISIONING_PROFILE_SUBMITASSIGNMENT_AD_HOC = "match AdHoc com.instructure.icanvas.SubmitAssignment"
PROVISIONING_PROFILE_WIDGETS_AD_HOC = "match AdHoc com.instructure.icanvas.widgets"

PROVISIONING_PROFILES_AD_HOC = {
  "com.instructure.icanvas": PROVISIONING_PROFILE_STUDENT_AD_HOC,
  "com.instructure.icanvas.SubmitAssignment": PROVISIONING_PROFILE_SUBMITASSIGNMENT_AD_HOC,
  "com.instructure.icanvas.widgets": PROVISIONING_PROFILE_WIDGETS_AD_HOC
}

# Code Sign Identity 
CODE_SIGN_IDENTITY = "Apple Distribution: Instructure, Inc. (B6333T4PXQ)"

# Project paths
STUDENT_PROJECT_PATH = "Student/Student.xcodeproj"
TEACHER_PROJECT_PATH = "Teacher/Teacher.xcodeproj"
PARENT_PROJECT_PATH = "Parent/Parent.xcodeproj"
HORIZON_PROJECT_PATH = "Horizon/Horizon.xcodeproj"

# Lanes

platform :ios do
  before_all do    
    setup_circle_ci
  end

  desc "Run UnitTests"
  lane :unit_tests do
    run_tests(
      code_coverage: true,
      output_directory: "./unit_tests_output",
      result_bundle: true,
      scheme: "CITests",
      devices: ["iPhone 16 (18.0.1)"]
    )
  end

  desc "Build E2ETests-Student"
  lane :e2e_tests_student_build_only do
    run_tests(
      scheme: "E2ETests-Student",
      device: "iPhone 16",
      derived_data_path: "dist",
      build_for_testing: true
    )
  end

  desc "Run E2ETests-Student"
  lane :e2e_tests_student do |options|
    run_tests(
      code_coverage: true,
      output_directory: "./unit_tests_output",
      result_bundle: true,
      scheme: "E2ETests-Student",
      device: "iPhone 16",
      only_testing: options[:tests],
      derived_data_path: "dist",
      test_without_building: true
    )
  end

  desc "Ad-hoc Student Build"
  lane :adhoc_student do
    match(type: "adhoc")
    disable_code_signing_student
    gym(
      scheme: "Student",
      export_method: "ad-hoc",
      export_options: { 
        signingCertificate: CODE_SIGN_IDENTITY,
        provisioningProfiles: PROVISIONING_PROFILES_AD_HOC
      }
    )
    firebase_app_distribution(
      service_credentials_file: "#{ENV['HOME']}/gservice-key.json"
    )
  end

end

def disable_code_signing_student
  update_code_signing_settings(
    use_automatic_signing: false,
    targets: ["Student"],
    path: STUDENT_PROJECT_PATH,
    code_sign_identity: CODE_SIGN_IDENTITY,
    profile_name: PROVISIONING_PROFILE_STUDENT_AD_HOC  
  )

  update_code_signing_settings(
    use_automatic_signing: false,
    targets: ["SubmitAssignment"],
    path: STUDENT_PROJECT_PATH,
    code_sign_identity: CODE_SIGN_IDENTITY,
    profile_name: PROVISIONING_PROFILE_SUBMITASSIGNMENT_AD_HOC  
  )

  update_code_signing_settings(
    use_automatic_signing: false,
    targets: ["Widgets"],
    path: STUDENT_PROJECT_PATH,
    code_sign_identity: CODE_SIGN_IDENTITY,
    profile_name: PROVISIONING_PROFILE_WIDGETS_AD_HOC 
  )
end